#pragma checksum "C:\Users\cho7r\Documents\GitHub\NewGame\BlockKing\BlockKing\Pages\OSMaps.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4a2e433f37d38a3f9249623c2766434bdafbfc21"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(BlockKing.Pages.Pages_OSMaps), @"mvc.1.0.razor-page", @"/Pages/OSMaps.cshtml")]
namespace BlockKing.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\cho7r\Documents\GitHub\NewGame\BlockKing\BlockKing\Pages\_ViewImports.cshtml"
using BlockKing;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4a2e433f37d38a3f9249623c2766434bdafbfc21", @"/Pages/OSMaps.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"10fa4870ce4e9d9fbf2a7f6005974f02a59f5935", @"/Pages/_ViewImports.cshtml")]
    public class Pages_OSMaps : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\cho7r\Documents\GitHub\NewGame\BlockKing\BlockKing\Pages\OSMaps.cshtml"
  
    ViewData["Title"] = "Maps";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h3>My Google Maps Demo</h3>
<!--The div element for the map -->
<div id=""map"" style=""width:100%; height:500px; border: 5px solid #5E5454;""></div>
<script src=""https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"" type=""text/javascript""></script>
<script>
    // Initialize and add the map
    function initMap() {
        var Greenwich = { lat: 51.476853, lng: 0 };
        var map = new google.maps.Map(
            document.getElementById('map'), { zoom: 15, center: Greenwich, diagId: google.maps.MapTypeId.SATELLITE });
        var marker = new google.maps.Marker({ position: Greenwich, map: map });
    }
    google.maps.event.addDomListener(window, 'load', initMap);
</script>
<!--Load the API from the specified URL
* The async attribute allows the browser to render the page while the API loads
* The key parameter will contain your own API key (which is not needed for this tutorial)
* The callback parameter executes the initMap() function
-->



");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<BlockKing.Ui.Pages.MapsModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<BlockKing.Ui.Pages.MapsModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<BlockKing.Ui.Pages.MapsModel>)PageContext?.ViewData;
        public BlockKing.Ui.Pages.MapsModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
